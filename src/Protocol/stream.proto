package Protocol;


//////////////
// Request
//////////////

message FrameRequest 
{
	required string instanceUid=1;
	required uint32 instanceUidNumber=2;  // used to avoid passing instance uid every time
    required uint32 frameNumber=3;        // for multiframe
}


message FrameGroupRequest 
{

	enum RequestType
	{

		Fetch = 0;

		PriorityChanged = 1;

		//set series primary frame (default is 0)
		SetPrimaryFrame = 2; 

		// cancel
		Cancel = 3;

	}

	enum Priority
	{
		Selected = 0;
		Visible = 1;
		Hidden = 2;
	}
	
	required RequestType type = 1;
    required string studyUid=2;
    required uint32 studyUidNumber=3;  // used to avoid passing study uid every time
	required string seriesUid=4;
	required uint32 seriesUidNumber=5;  // used to avoid passing series uid every time
	required Priority priority=6;

	required string instanceUidPrefix=7;  //common part of sop instance uid string
    repeated FrameRequest frames=8;
    required bool multiFrame=9;
  
}

//////////////
// Response
//////////////


message FrameHeader
{
	///////////////////////////////////////////////////////////
	enum bitDepth
	{
			depthU8 = 0;    ///< unsigned integer, 1 byte
			depthS8 = 1;    ///< signed integer, 1 byte
			depthU16 = 2;   ///< unsigned integer, 2 bytes
			depthS16 = 3;   ///< signed integer, 2 bytes
			depthU32 = 4;   ///< unsigned integer, 4 bytes
			depthS32 = 5;   ///< signed integer, 4 bytes
	};

	required uint32 totalBytes=1;	//compressed or uncompressed
	required uint32 imageSizeX=2;
	required uint32 imageSizeY=3;
	required bitDepth depth=4;
	required string colorSpace=5;
	required string transferSyntax=6;
	required uint32 channelsNumber=7;
	required bool bInterleaved=8;
	required bool b2Complement=9;
	required uint32 allocatedBits=10;
	required uint32 storedBits=11;
	required uint32 highBit=12;

};

// one FrameResponse is sent, followed by many FrameFragments
message FrameResponse 
{
    required uint32 instanceUidNumber=1;  // used to avoid passing instance uid every time
    required uint32 frameNumber=2;        // for multiframe
    required FrameHeader frameHeader=3;
};

// raw pixels are streamed after FrameFragment
message FrameFragmentHeader
{
    required uint32 offset=1;
    required uint32 size=2;
};
