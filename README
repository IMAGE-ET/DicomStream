This project provides a Linux streaming server for full-resolution Dicom
image data. 

The code has been designed for speed and scalability.

Dependencies:
0) Boost threads
1) libev
2) libeio
3) Imebra Dicom toolkit: I have forked a version of this excellent toolkit
and put it on Github. It is included as a submodule of DicomStream. 


After cloning this project, do the following:

A) set up git submodules

$ git submodule init
$ git submodule update


B) Install boost

C) Install libev

D) Install libeio



ToDo:

- c# client

- flesh out installation guide
- in a branch, trim down Imebra to bare essentials, to avoid code bloat
- increment file refcount when calling open, readahead, prefetch, etc. so that file is not
closed while these operations are in progress
- add prefetch using custom EIO, and fadvise(SEQUENTIAL....)
   a) open all files
   b) on open, do readahead if parser doesn't exist
   c) on readahead, do fadvise using first fragment offset as offset
   d) on fadvise, exit

- fix error handling, check for leaks, decide when to close connection with client
- handle FIN, etc.
- handle message for change of primary index (stacking)
- implement weighted round-robin strategy on queue of frame groups
- add Pantheios logging framework - replace printf statements







